// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginPage /> renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginPage
    login={
      Object {
        "isAuthenticated": false,
        "isLoggingIn": false,
        "user": null,
      }
    }
    loginUser={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="wrapper valign-wrapper"
      >
        <div
          className="col s1 m2 l4 "
        />
        <div
          className="col s10 m7 l5"
        >
          <div
            className="row card-panel"
          >
            <div
              className="row"
            >
              <ReduxForm
                id="login-form"
                login={
                  Object {
                    "isAuthenticated": false,
                    "isLoggingIn": false,
                    "user": null,
                  }
                }
                loginUser={[Function]}
                submitForm={[Function]}
              />
            </div>
          </div>
        </div>
        <div
          className="col s1 m2 l4"
        />
      </div>,
      "className": "row wrap",
      "style": Object {
        "backgroundImage": "url(test-file-stub)",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col s1 m2 l4 "
          />,
          <div
            className="col s10 m7 l5"
          >
            <div
              className="row card-panel"
            >
              <div
                className="row"
              >
                <ReduxForm
                  id="login-form"
                  login={
                    Object {
                      "isAuthenticated": false,
                      "isLoggingIn": false,
                      "user": null,
                    }
                  }
                  loginUser={[Function]}
                  submitForm={[Function]}
                />
              </div>
            </div>
          </div>,
          <div
            className="col s1 m2 l4"
          />,
        ],
        "className": "wrapper valign-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "col s1 m2 l4 ",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row card-panel"
            >
              <div
                className="row"
              >
                <ReduxForm
                  id="login-form"
                  login={
                    Object {
                      "isAuthenticated": false,
                      "isLoggingIn": false,
                      "user": null,
                    }
                  }
                  loginUser={[Function]}
                  submitForm={[Function]}
                />
              </div>
            </div>,
            "className": "col s10 m7 l5",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="row"
              >
                <ReduxForm
                  id="login-form"
                  login={
                    Object {
                      "isAuthenticated": false,
                      "isLoggingIn": false,
                      "user": null,
                    }
                  }
                  loginUser={[Function]}
                  submitForm={[Function]}
                />
              </div>,
              "className": "row card-panel",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ReduxForm
                  id="login-form"
                  login={
                    Object {
                      "isAuthenticated": false,
                      "isLoggingIn": false,
                      "user": null,
                    }
                  }
                  loginUser={[Function]}
                  submitForm={[Function]}
                />,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "id": "login-form",
                  "login": Object {
                    "isAuthenticated": false,
                    "isLoggingIn": false,
                    "user": null,
                  },
                  "loginUser": [Function],
                  "submitForm": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "col s1 m2 l4",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="wrapper valign-wrapper"
        >
          <div
            className="col s1 m2 l4 "
          />
          <div
            className="col s10 m7 l5"
          >
            <div
              className="row card-panel"
            >
              <div
                className="row"
              >
                <ReduxForm
                  id="login-form"
                  login={
                    Object {
                      "isAuthenticated": false,
                      "isLoggingIn": false,
                      "user": null,
                    }
                  }
                  loginUser={[Function]}
                  submitForm={[Function]}
                />
              </div>
            </div>
          </div>
          <div
            className="col s1 m2 l4"
          />
        </div>,
        "className": "row wrap",
        "style": Object {
          "backgroundImage": "url(test-file-stub)",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="col s1 m2 l4 "
            />,
            <div
              className="col s10 m7 l5"
            >
              <div
                className="row card-panel"
              >
                <div
                  className="row"
                >
                  <ReduxForm
                    id="login-form"
                    login={
                      Object {
                        "isAuthenticated": false,
                        "isLoggingIn": false,
                        "user": null,
                      }
                    }
                    loginUser={[Function]}
                    submitForm={[Function]}
                  />
                </div>
              </div>
            </div>,
            <div
              className="col s1 m2 l4"
            />,
          ],
          "className": "wrapper valign-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "col s1 m2 l4 ",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="row card-panel"
              >
                <div
                  className="row"
                >
                  <ReduxForm
                    id="login-form"
                    login={
                      Object {
                        "isAuthenticated": false,
                        "isLoggingIn": false,
                        "user": null,
                      }
                    }
                    loginUser={[Function]}
                    submitForm={[Function]}
                  />
                </div>
              </div>,
              "className": "col s10 m7 l5",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="row"
                >
                  <ReduxForm
                    id="login-form"
                    login={
                      Object {
                        "isAuthenticated": false,
                        "isLoggingIn": false,
                        "user": null,
                      }
                    }
                    loginUser={[Function]}
                    submitForm={[Function]}
                  />
                </div>,
                "className": "row card-panel",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ReduxForm
                    id="login-form"
                    login={
                      Object {
                        "isAuthenticated": false,
                        "isLoggingIn": false,
                        "user": null,
                      }
                    }
                    loginUser={[Function]}
                    submitForm={[Function]}
                  />,
                  "className": "row",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "id": "login-form",
                    "login": Object {
                      "isAuthenticated": false,
                      "isLoggingIn": false,
                      "user": null,
                    },
                    "loginUser": [Function],
                    "submitForm": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "col s1 m2 l4",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
